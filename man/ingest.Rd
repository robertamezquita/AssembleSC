% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ingest.R
\name{ingest}
\alias{ingest}
\title{Ingest of scRNA-seq Alignment Results}
\usage{
ingest(
  dir = NULL,
  aligner = NULL,
  mode = "standard",
  type = "raw",
  strategy = "3prime_tagged",
  .id = NULL,
  .sep = ".",
  tx2gene = NULL
)
}
\arguments{
\item{dir}{A string with the path to the sample directory where a scRNA-seq experiment results
from an aligner are stored. Required. For the \code{kallisto} aligner, must be the directory containing all
cells (samples) from the scRNA-seq run.}

\item{aligner}{A string specifying a supported aligner from one of the following:
'STARsolo', 'kb-python'. For 'kallisto', see \verb{[ingest_kallisto()]} for more details. Required.}

\item{mode}{A string specifying the mode with which the aligner was run.
'standard' refers to kallisto/kb-python default (and is the same as 'Gene' for
\code{aligner = STARsolo}), 'lamanno' refers to a kb-python specific mode, and 'Gene',
'GeneFull', 'and 'Velocyto' refer to STARsolo specific modes. Default is
'standard'.}

\item{type}{A string specifying whether to use the raw or aligner-filtered count
matrices. Default is 'raw'. Not applicable for when aligner is 'kallisto'.}

\item{strategy}{A string specifying the sequencing protocol's quantification strategy. Default is '3prime_tagged'.}

\item{.id}{A string that serves to uniquify samples by prepending to the barcode.
Default is NULL, which means no id is prepended to barcodes. If .id = 'auto',
the .id string is deduced from the basename of the \code{dir} argument.}

\item{.sep}{The separator between \code{.id} and the droplet/cell barcode, default is a full stop.}

\item{tx2gene}{A two column data.frame where the first column is the transcript id, and the
second column is the corresponding gene id. Required for when the aligner is set to kallisto.}
}
\value{
An annotated \code{SingleCellExperiment} object.
}
\description{
Reads in the resulting count matrices following alignment of scRNA-seq data.
Supported aligners are detailed below, as each has their own way
of organizing results.
}
\details{
Below is a list of aligners that are supported or with planned support,
and details on how they are run and their respective organization of results:
\itemize{
\item kb-python (kallisto|bustools) (standard):
\itemize{
\item Run via kb-python workflow via \verb{kb count} with \verb{--filter bustools} enabled.
\item Alignment results are organized as follows:
\itemize{
\item \verb{\{sample\}/\{counts_filtered | counts_unfiltered\}/\{cells_x_genes.barcodes.txt, cells_x_genes.genes.txt, cells_x_genes.mtx\}}
}
\item Alignment statistics are stored in: \code{{sample}/run_info.json}
}
\item kb-python (kallisto|bustools) (--lamanno) \link{not supported yet}:
\itemize{
\item Run via kb-python workflow via \verb{kb count} with \code{--lamanno} and \verb{--filter bustools} flags enabled.
\item Alignment results are organized as follows:
\itemize{
\item \verb{\{sample\}/\{counts_filtered | counts_unfiltered\}/\{cells_x_genes.barcodes.txt, cells_x_genes.genes.txt, cells_x_genes.mtx\}}
}
\item Alignment statistics are stored in: \code{{sample}/run_info.json}
}
\item STARsolo:
\itemize{
\item Run via STAR in STARsolo mode with with the \verb{--soloFeatures Gene GeneFull SJ Velocyto} and \code{--soloCellFilter} enabled.
\item Alignment results are organized as follows:
\itemize{
\item \verb{\{sample\}/Solo.out/\{mode\}/\{filtered | raw\}/\{barcodes.tsv, features.tsv, matrix.mtx\}}
}
\item Alignment statistics are stored in: \code{{sample}/Log.final.out}
\item Note that running STARsolo with Velocyto feature output only provides a raw, unfiltered output. Not yet supported.
}
\item kallisto:
\itemize{
\item Run via \verb{kallisto quant}.
\item Alignment results are organized as follows:
\itemize{
\item \code{{sample}/{abundance.tsv | abundance.h5}}
}
\item Alignment statistics are stored in: \code{{sample}/run_info.json}
\item See \verb{[ingest_kallisto()]} for a custom function designed for kallisto runs, since the input is
quite different compared to STARsolo/kb-python.
}
}

Another consideration is the sequencing capture strategy. The reason this is important is
for downstream normalization of the counts, specifically whether to adjust counts for transcript-length.
In many cases with scRNA-seq, the strategy is 3' tagged, which does not require any gene/transcript
length correction as the counts do not have a length bias. However, as is often the case for
plate-based protocols such as SMARTseq2 with full-length sequencing, then indeed the counts
should be adjusted. The parameter \code{capture} designates whether the strategy was '3prime_tagged' (default),
which does not perform length-correction, versus 'full_length', which does.
}
\examples{
dat.path <- system.file('extdata/aligners/STARsolo/Sample_A1/', package = 'AssembleSC')

ingest(dat.path,
       aligner = 'STARsolo', mode = 'Gene',
       type = 'filtered',
       .id = 'A1', .sep = '.')

}
\seealso{
ingest_kallisto

Other ingest: 
\code{\link{ingest_kallisto}()}
}
\concept{ingest}
